% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poilog.R
\name{d_poilog}
\alias{d_poilog}
\alias{dconv_poilog}
\alias{p_poilog}
\alias{pconv_poilog}
\alias{dtrunc_dpoilog}
\alias{r_poilog}
\alias{fit_poilog}
\title{Poisson-lognormal distribution functions}
\usage{
d_poilog(
  x,
  gcn = rep(1, length(x)),
  mu,
  sig,
  constant = "G25_K51",
  log = FALSE
)

dconv_poilog(x, q, mu, sig, log = FALSE, adjust = 0)

p_poilog(
  q,
  gcn = rep(1, length(q)),
  mu,
  sig,
  log.p = FALSE,
  lower.tail = FALSE,
  constant = "G25_K51"
)

pconv_poilog(x, q, mu, sig, log = FALSE, adjust = 0)

dtrunc_dpoilog(
  x,
  gcn = rep(1, length(x)),
  mu,
  sig,
  trunc = 0,
  constant = "G25_K51",
  log = FALSE,
  debug = FALSE
)

r_poilog(n, mu, sig)

fit_poilog(
  x,
  gcn = rep(1, length(x)),
  trunc = 0,
  start.value,
  constant = "G25_K51",
  min.sig = 1e-05,
  ...
)
}
\arguments{
\item{x, q}{the observed species abundances; in 16S profiling, this is the observed 16S read count}

\item{gcn}{the 16S copy number of OTUs; it should be a numeric vector of the same length as \code{x}}

\item{mu}{the log mean of the log-normal distribution}

\item{sig}{the log standard deviation of the log-normal distribution}

\item{constant}{the node and weight values for Gauss-Kronrod quadrature formula; see \code{Details} for more information}

\item{log, log.p}{logical; if \code{TRUE}, the log-transformed value will be returned; defaults to \code{FALSE}}

\item{trunc}{the truncation cutoff}

\item{n}{the number of random numbers to be generated}
}
\value{
\code{d_poilog}, \code{dtrunc_dpoilog}, \code{p_poilog}, \code{dconv_poilog} and \code{pconv_poilog} return a numeric vector the same length as \code{x} or \code{q}

\code{r_poilog} return a numeric vector of length \code{n}

\code{fit_poilog} return a \code{mle2} class object of fitted model
}
\description{
Refined Poisson lognormal distribution functions for better accuracy after truncation
}
\details{
\code{sads::dpoilog} encounters numerical instability that may lead to inaccurate likelihood for certain parameter combinations. The alternative functions implemented in this package aims to minimize the numerical error in model fitting.

\code{d_poilog} and \code{dtrunc_dpoilog} are the (truncated) probability mass function; \code{p_poilog} is the cumulative distribution function; \code{r_poilog} is the random number generator function.

\code{dconv_poilog} and  \code{pconv_poilog} are the integrand functions for \code{d_poilog} and \code{p_poilog}, respectively; despite their role as mostly internal functions, they are exported for user-created functions.

In Poisson-log-normal distribution, the sampling effort \code{eta}, has perfect collinearity with the \code{mu} in the log-normal distribution. Therefore, \code{eta} is degenerated and fixed to 1 internally (before GCN correction).

\code{constant} can be either a character value naming the specific element to use in the data list \code{quadgk_constant}, or a user-supplied list of numeric vectors containing the node and weight values.

The quantile function \code{q_poilog} is not implemented, and thus \code{r_poilog} can only generate random values using the full distribution without truncation, making it not suitable for RAD prediction.

For RAD prediction, use \code{representative_poilog} for approximated quantiles.

\code{fit_poilog} fits the Poisson-lognormal distribution using the refined PMF.
}
