% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nbpower.R
\name{dtrunc_dnbpower}
\alias{dtrunc_dnbpower}
\alias{dconv_nbpower}
\alias{pconv_nbpower}
\alias{dnbpower}
\alias{pnbpower}
\alias{fit_nbpower}
\title{Negative-binomial-power-law distribution functions}
\usage{
dtrunc_dnbpower(
  x,
  gcn = rep(1, length(x)),
  trunc = 0,
  eta,
  odisp,
  s,
  exact = 1e+05,
  constant = "G25_K51",
  log = FALSE,
  debug = FALSE
)

dconv_nbpower(x, q, eta, odisp, s, log = FALSE, adjust = 0, debugging = FALSE)

pconv_nbpower(x, q, eta, odisp, s, log = FALSE, adjust = 0, debugging = FALSE)

dnbpower(
  x,
  gcn = rep(1, length(x)),
  eta,
  odisp,
  s,
  exact = 1e+05,
  constant = "G25_K51",
  log = FALSE,
  debug = FALSE
)

pnbpower(
  q,
  gcn = rep(1, length(q)),
  eta,
  odisp,
  s,
  exact = 1e+05,
  constant = "G25_K51",
  log.p = FALSE,
  lower.tail = TRUE,
  debug = FALSE
)

fit_nbpower(
  x,
  gcn = rep(1, length(x)),
  trunc = 0,
  start.value,
  upper = c(s = 20),
  min.odisp = 1e-04,
  min.s = 1e-10,
  ...
)
}
\arguments{
\item{x, q}{the observed species abundances, non-negative integers}

\item{gcn}{the 16S copy number of each species, with the same length and order of x, positive integers}

\item{trunc}{the truncation point to fit a distribution whose lower-tail is truncated; non-negative integer}

\item{eta}{the sampling effort, positive real number}

\item{s}{exponent of the denominator in power-law distribution; it is the same as parameter \code{s} in the \code{sads} package}

\item{exact}{the number of terms to be calculated exactly before approximation applies}

\item{constant}{the name of Gauss-Kronrod quadrature constants; see \code{Details}}

\item{log, log.p}{if log-transformed probability should be returned or supplied; default to \code{FALSE}}

\item{adjust}{log-adjustment value to avoid precision problem in integration}

\item{lower.tail}{if the lower-tail cumulative probability should be returned or received; default to \code{FALSE} for accuracy of large quantiles}

\item{start.value}{a list of named numeric values as the starting values of ML fitting}

\item{upper}{the upper limit of parameters in the ML fitting}

\item{min.odisp, min.s}{padding of parameter values in ML fitting}

\item{...}{other parameters passed to the \code{mle2} function}
}
\value{
\code{dnbpower}, \code{dtrunc_dnbpower}, \code{pnbpower} return a numeric vector the same length as \code{x} or \code{q}

\code{fit_nbpower} returns a \code{mle2} class object
}
\description{
Negative-binomial-power-law distribution functions for SAD fitting
}
\details{
\code{dnbpower} is the probability mass function; \code{dtrunc_dnbpower} is the truncated probability mass function;\code{pnbpower} is the cumulative distribution function.

\code{dconv_nbpower} and \code{pconv_nbpower} are the integrand function for \code{dnbpower} and \code{pnbpower}, respectively; despite their role as internal functions, they are exported for user-created functions.

\code{constant} can be either a character value naming the specific element to use in the data list \code{quadgk_constant}, or a user-supplied list of numeric vectors containing the node and weight values.

\code{fit_nbpower} is the function to fit a negative-binomial power-law distribution using ML.
}
